{
	"info": {
		"_postman_id": "a9988f54-ceb6-4a85-aa06-634a6176a310",
		"name": "29 Rienat",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21139155"
	},
	"item": [
		{
			"name": "Cars brands",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"Successfully received the data\", function () {\r",
							"//     pm.response.to.have.status(200);\r",
							"// });\r",
							"var jsonData = pm.response.json()\r",
							"var jsonDataArray = jsonData.data;\r",
							"var brandID = jsonDataArray[0].id;\r",
							"console.log(\"brandID = \" + brandID);\r",
							"console.log(\"brandTitle = \" + jsonData.data[0].title);\r",
							"pm.collectionVariables.set(\"carBrandId\", pm.response.json().data[1].id);\r",
							"console.log(\"brandId = \" + pm.response.json().data[0].id);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"url\", \"https://qauto.forstudy.space/api\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/cars/brands",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars",
						"brands"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cars models",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"Successfully received the data\", function () {\r",
							"//     pm.response.to.have.status(200);\r",
							"// });\r",
							"pm.collectionVariables.set(\"carmodelID\", pm.response.json().data[5].id);\r",
							"console.log(\"carmodelID = \" + pm.collectionVariables.get(\"carmodelID\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/cars/models",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars",
						"models"
					]
				}
			},
			"response": []
		},
		{
			"name": "Sign Up",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"User created\", function () {\r",
							"//     pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"// });\r",
							"// те же проверки что и после 2 пункта и в 4, 5, 6  есть\r",
							"// pm.collectionVariables.set(\"userId\", pm.response.json().data.userId);\r",
							"// console.log(\"userId = \" + pm.response.json().data.userId);\r",
							"// pm.test(\"User ID verified\", function () {\r",
							"// pm.expect(pm.response.json().data.userId).to.eql(pm.collectionVariables.get(\"userId\"));\r",
							"// });\r",
							"// pm.collectionVariables.set(\"currency\", pm.response.json().data.currency);\r",
							"// console.log(\"currency = \" + pm.response.json().data.currency);\r",
							"// pm.test(\"User currency verified\", function () {\r",
							"// pm.expect(pm.response.json().data.currency).to.eql(pm.collectionVariables.get(\"currency\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"url\", \"https://qauto.forstudy.space/api\");\r",
							"pm.collectionVariables.set(\"email\", \"test994579@test.com\");\r",
							"pm.collectionVariables.set(\"password\", \"Qwerty12346\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"John\",\r\n  \"lastName\": \"Dou\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"repeatPassword\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/auth/signup",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Sign In",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"Authenticates user.\", function () {\r",
							"//     pm.response.to.have.status(200);\r",
							"// });\r",
							"console.log(\"***********************************\");\r",
							"console.log(pm.collectionVariables.get(\"email\"));\r",
							"console.log(pm.collectionVariables.get(\"password\"));\r",
							"console.log(\"***********************************\");\r",
							"// pm.test(\"userId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.userId).to.eql(pm.collectionVariables.get(\"userId\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "email",
							"value": "{{email}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text"
						},
						{
							"key": "remember",
							"value": " false",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{url}}/auth/signin",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth",
						"signin"
					]
				}
			},
			"response": []
		},
		{
			"name": "1. Add car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"1.Car successfully created\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });\r",
							"pm.collectionVariables.set(\"carID1\", pm.response.json().data.id);\r",
							"console.log(\"carID1 = \" + pm.response.json().data.id);\r",
							"// pm.test(\"carBrandId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carBrandId).to.eql(pm.collectionVariables.get(\"carBrandId\"));\r",
							"// });\r",
							"\r",
							"// pm.test(\"carModeId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carModelId).to.eql(pm.collectionVariables.get(\"carmodelID\"));\r",
							"// });\r",
							"// pm.test(\"initialMileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.initialMileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });\r",
							"// pm.test(\"mileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.mileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"initial_mileage\", 100);\r",
							"// pm.collectionVariables.set(\"carBrandId\", 1);\r",
							"// pm.collectionVariables.set(\"carModelId\", 4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": {{carBrandId}},\r\n  \"carModelId\": {{carmodelID}},\r\n  \"mileage\": {{initial_mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Add car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"1.Car successfully created\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });\r",
							"// pm.collectionVariables.set(\"carID2\", pm.response.json().data.id);\r",
							"// console.log(\"carID2 = \" + pm.response.json().data.id);\r",
							"// pm.test(\"carBrandId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carBrandId).to.eql(pm.collectionVariables.get(\"carBrandId\"));\r",
							"// });\r",
							"// pm.test(\"carModeId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carModelId).to.eql(pm.collectionVariables.get(\"carmodelID\"));\r",
							"// });\r",
							"// pm.test(\"initialMileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.initialMileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });\r",
							"// pm.test(\"mileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.mileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"initial_mileage\", 100);\r",
							"// pm.collectionVariables.set(\"carBrandId\", 1);\r",
							"// pm.collectionVariables.set(\"carModelId\", 4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": {{carBrandId}},\r\n  \"carModelId\": {{carmodelID}},\r\n  \"mileage\": {{initial_mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Add car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"1.Car successfully created\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });\r",
							"// pm.collectionVariables.set(\"carID3\", pm.response.json().data.id);\r",
							"// console.log(\"carID3 = \" + pm.response.json().data.id);\r",
							"// pm.test(\"carBrandId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carBrandId).to.eql(pm.collectionVariables.get(\"carBrandId\"));\r",
							"// });\r",
							"// pm.test(\"carModeId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carModelId).to.eql(pm.collectionVariables.get(\"carmodelID\"));\r",
							"// });\r",
							"// pm.test(\"initialMileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.initialMileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });\r",
							"// pm.test(\"mileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.mileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"initial_mileage\", 100);\r",
							"// pm.collectionVariables.set(\"carBrandId\", 1);\r",
							"// pm.collectionVariables.set(\"carModelId\", 4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": {{carBrandId}},\r\n  \"carModelId\": {{carmodelID}},\r\n  \"mileage\": {{initial_mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "4. Add car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"1.Car successfully created\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });\r",
							"// pm.collectionVariables.set(\"carID3\", pm.response.json().data.id);\r",
							"// console.log(\"carID3 = \" + pm.response.json().data.id);\r",
							"// pm.test(\"carBrandId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carBrandId).to.eql(pm.collectionVariables.get(\"carBrandId\"));\r",
							"// });\r",
							"// pm.test(\"carModeId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carModelId).to.eql(pm.collectionVariables.get(\"carmodelID\"));\r",
							"// });\r",
							"// pm.test(\"initialMileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.initialMileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });\r",
							"// pm.test(\"mileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.mileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"initial_mileage\", 100);\r",
							"// pm.collectionVariables.set(\"carBrandId\", 1);\r",
							"// pm.collectionVariables.set(\"carModelId\", 4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": {{carBrandId}},\r\n  \"carModelId\": {{carmodelID}},\r\n  \"mileage\": {{initial_mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "5. Add car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"1.Car successfully created\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });\r",
							"// pm.collectionVariables.set(\"carID3\", pm.response.json().data.id);\r",
							"// console.log(\"carID3 = \" + pm.response.json().data.id);\r",
							"// pm.test(\"carBrandId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carBrandId).to.eql(pm.collectionVariables.get(\"carBrandId\"));\r",
							"// });\r",
							"// pm.test(\"carModeId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carModelId).to.eql(pm.collectionVariables.get(\"carmodelID\"));\r",
							"// });\r",
							"// pm.test(\"initialMileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.initialMileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });\r",
							"// pm.test(\"mileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.mileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"initial_mileage\", 100);\r",
							"// pm.collectionVariables.set(\"carBrandId\", 1);\r",
							"// pm.collectionVariables.set(\"carModelId\", 4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": {{carBrandId}},\r\n  \"carModelId\": {{carmodelID}},\r\n  \"mileage\": {{initial_mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "6. Add car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"1.Car successfully created\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });\r",
							"// pm.collectionVariables.set(\"carID3\", pm.response.json().data.id);\r",
							"// console.log(\"carID3 = \" + pm.response.json().data.id);\r",
							"// pm.test(\"carBrandId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carBrandId).to.eql(pm.collectionVariables.get(\"carBrandId\"));\r",
							"// });\r",
							"// pm.test(\"carModeId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carModelId).to.eql(pm.collectionVariables.get(\"carmodelID\"));\r",
							"// });\r",
							"// pm.test(\"initialMileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.initialMileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });\r",
							"// pm.test(\"mileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.mileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"initial_mileage\", 100);\r",
							"// pm.collectionVariables.set(\"carBrandId\", 1);\r",
							"// pm.collectionVariables.set(\"carModelId\", 4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": {{carBrandId}},\r\n  \"carModelId\": {{carmodelID}},\r\n  \"mileage\": {{initial_mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "7. Add car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"1.Car successfully created\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });\r",
							"// pm.collectionVariables.set(\"carID3\", pm.response.json().data.id);\r",
							"// console.log(\"carID3 = \" + pm.response.json().data.id);\r",
							"// pm.test(\"carBrandId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carBrandId).to.eql(pm.collectionVariables.get(\"carBrandId\"));\r",
							"// });\r",
							"// pm.test(\"carModeId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carModelId).to.eql(pm.collectionVariables.get(\"carmodelID\"));\r",
							"// });\r",
							"// pm.test(\"initialMileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.initialMileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });\r",
							"// pm.test(\"mileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.mileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"initial_mileage\", 100);\r",
							"// pm.collectionVariables.set(\"carBrandId\", 1);\r",
							"// pm.collectionVariables.set(\"carModelId\", 4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": {{carBrandId}},\r\n  \"carModelId\": {{carmodelID}},\r\n  \"mileage\": {{initial_mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "8. Add car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"1.Car successfully created\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });\r",
							"// pm.collectionVariables.set(\"carID3\", pm.response.json().data.id);\r",
							"// console.log(\"carID3 = \" + pm.response.json().data.id);\r",
							"// pm.test(\"carBrandId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carBrandId).to.eql(pm.collectionVariables.get(\"carBrandId\"));\r",
							"// });\r",
							"// pm.test(\"carModeId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carModelId).to.eql(pm.collectionVariables.get(\"carmodelID\"));\r",
							"// });\r",
							"// pm.test(\"initialMileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.initialMileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });\r",
							"// pm.test(\"mileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.mileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"initial_mileage\", 100);\r",
							"// pm.collectionVariables.set(\"carBrandId\", 1);\r",
							"// pm.collectionVariables.set(\"carModelId\", 4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": {{carBrandId}},\r\n  \"carModelId\": {{carmodelID}},\r\n  \"mileage\": {{initial_mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "9. Add car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"1.Car successfully created\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });\r",
							"// pm.collectionVariables.set(\"carID3\", pm.response.json().data.id);\r",
							"// console.log(\"carID3 = \" + pm.response.json().data.id);\r",
							"// pm.test(\"carBrandId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carBrandId).to.eql(pm.collectionVariables.get(\"carBrandId\"));\r",
							"// });\r",
							"// pm.test(\"carModeId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carModelId).to.eql(pm.collectionVariables.get(\"carmodelID\"));\r",
							"// });\r",
							"// pm.test(\"initialMileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.initialMileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });\r",
							"// pm.test(\"mileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.mileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"initial_mileage\", 100);\r",
							"// pm.collectionVariables.set(\"carBrandId\", 1);\r",
							"// pm.collectionVariables.set(\"carModelId\", 4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": {{carBrandId}},\r\n  \"carModelId\": {{carmodelID}},\r\n  \"mileage\": {{initial_mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "10. Add car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"1.Car successfully created\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });\r",
							"// pm.collectionVariables.set(\"carID3\", pm.response.json().data.id);\r",
							"// console.log(\"carID3 = \" + pm.response.json().data.id);\r",
							"// pm.test(\"carBrandId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carBrandId).to.eql(pm.collectionVariables.get(\"carBrandId\"));\r",
							"// });\r",
							"// pm.test(\"carModeId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carModelId).to.eql(pm.collectionVariables.get(\"carmodelID\"));\r",
							"// });\r",
							"// pm.test(\"initialMileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.initialMileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });\r",
							"// pm.test(\"mileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.mileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"initial_mileage\", 100);\r",
							"// pm.collectionVariables.set(\"carBrandId\", 1);\r",
							"// pm.collectionVariables.set(\"carModelId\", 4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": {{carBrandId}},\r\n  \"carModelId\": {{carmodelID}},\r\n  \"mileage\": {{initial_mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Cars Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"CarID1 verified\", function () {\r",
							"//     pm.expect(pm.response.json().data[0].id).to.eql(pm.collectionVariables.get(\"carID1\"));\r",
							"// });\r",
							"const Data = pm.response.json().data;\r",
							"// создается первый \r",
							"let myArrayModel1 = []\r",
							"_.each(pm.response.json().data, (item) => {\r",
							"    myArrayModel1.push(item.model)\r",
							"});\r",
							"pm.collectionVariables.set(\"modelArray1\", myArrayModel1);\r",
							"console.log(myArrayModel1)\r",
							"\r",
							"// и второй\r",
							"let myArrayMileage1 = []\r",
							"_.each(pm.response.json().data, (item) => {\r",
							"    myArrayMileage1.push(item.mileage)\r",
							"});\r",
							"pm.collectionVariables.set(\"mileageArray1\", myArrayMileage1);\r",
							"console.log(myArrayMileage1)\r",
							"\r",
							"pm.collectionVariables.set(\"mileageArray1\",JSON.stringify(myArrayMileage1));\r",
							"pm.collectionVariables.set(\"modelArray1\",JSON.stringify(myArrayModel1));\r",
							"\r",
							"\r",
							"\r",
							"pm.collectionVariables.set(\"User1Data\", JSON.stringify(Data));\r",
							"\r",
							"// pm.test(\"Verify myArrayModel1 > lenght\", function () {\r",
							"//     for (let i of Data) {\r",
							"//         for (let s of myArrayModel1)\r",
							"//             pm.expect(i.model).to.be.eql(s);\r",
							"//             console.log(i.model);\r",
							"\r",
							"//         for (let j of myArrayMileage1)\r",
							"//             pm.expect(i.mileage).to.be.eql(j);\r",
							"//             console.log(i.mileage);\r",
							"//     }\r",
							"// });\r",
							"\r",
							"// pm.test(\"Verify myArrayMileage1 > 0\", function () {\r",
							"//     for (let i of Data) {\r",
							"//         for (let j of myArrayMileage1)\r",
							"//             pm.expect(i.mileage).to.be.eql(j);\r",
							"//             console.log(i.mileage);\r",
							"//     }\r",
							"// });\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"// pm.test(\"Verify CarID1 Milleage > 0\", function () {\r",
							"//     for (let i in Data) {\r",
							"//         pm.expect(pm.response.json().data[i].mileage).to.be.above(0);\r",
							"//     }\r",
							"// });\r",
							"\r",
							"// pm.test(\"Verify CarID1 carModelId > 0\", function () {\r",
							"//     for (let i in Data) {\r",
							"//         pm.expect(pm.response.json().data[i].carModelId).to.be.above(0);\r",
							"//     }\r",
							"// });\r",
							"\r",
							"\r",
							"// pm.test(\"Verify CarID2 Milleage > 0\", function () {\r",
							"//     for (let i of Data) {\r",
							"//         pm.expect(i.mileage).to.be.eql(100);\r",
							"//     }\r",
							"// });\r",
							"\r",
							"\r",
							"// pm.test(\"Verify CarID3 Milleage > 0\", function () {\r",
							"//     pm.expect(pm.response.json().data[0].id).to.eql(pm.collectionVariables.get(\"CarID3\"));\r",
							"// });\r",
							"\r",
							"// pm.test(\"Successfully received the data\", function () {\r",
							"//     pm.response.to.have.status(200);\r",
							"// });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "Sign Up Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"User created\", function () {\r",
							"//     pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"// });\r",
							"//те же проверки что и после 2 пункта и в 4, 5, 6  есть\r",
							"// pm.collectionVariables.set(\"userId\", pm.response.json().data.userId);\r",
							"// console.log(\"userId = \" + pm.response.json().data.userId);\r",
							"// pm.test(\"User ID verified\", function () {\r",
							"// pm.expect(pm.response.json().data.userId).to.eql(pm.collectionVariables.get(\"userId\"));\r",
							"// });\r",
							"// pm.collectionVariables.set(\"currency\", pm.response.json().data.currency);\r",
							"// console.log(\"currency = \" + pm.response.json().data.currency);\r",
							"// pm.test(\"User currency verified\", function () {\r",
							"// pm.expect(pm.response.json().data.currency).to.eql(pm.collectionVariables.get(\"currency\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"url\", \"https://qauto.forstudy.space/api\");\r",
							"pm.collectionVariables.set(\"email2\", \"test888@test.com\");\r",
							"pm.collectionVariables.set(\"password\", \"Qwerty12345\");\r",
							"\r",
							"// let myArrayModel1 = []\r",
							"// _.each(pm.response.json().data, (item) => {\r",
							"//     myArrayModel1.push(item.model)\r",
							"// });\r",
							"// pm.collectionVariables.set(\"modelArray1\", myArrayModel1);\r",
							"// console.log(myArrayModel1)\r",
							"\r",
							"// let myArrayMileage1 = []\r",
							"// _.each(pm.response.json().data, (item) => {\r",
							"//     myArrayMileage1.push(item.mileage)\r",
							"// });\r",
							"// pm.collectionVariables.set(\"mileageArray\", myArrayMileage1);\r",
							"// console.log(myArrayMileage1)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"John\",\r\n  \"lastName\": \"Dou\",\r\n  \"email\": \"{{email2}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"repeatPassword\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/auth/signup",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "1. Add car Copy 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"1.Car successfully created\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });\r",
							"// pm.collectionVariables.set(\"carID1\", pm.response.json().data.id);\r",
							"// console.log(\"carID1 = \" + pm.response.json().data.id);\r",
							"// pm.test(\"carBrandId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carBrandId).to.eql(pm.collectionVariables.get(\"carBrandId\"));\r",
							"// });\r",
							"// pm.test(\"carModeId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carModelId).to.eql(pm.collectionVariables.get(\"carmodelID\"));\r",
							"// });\r",
							"// pm.test(\"initialMileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.initialMileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });\r",
							"// pm.test(\"mileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.mileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"initial_mileage\", 100);\r",
							"// pm.collectionVariables.set(\"carBrandId\", 1);\r",
							"// pm.collectionVariables.set(\"carModelId\", 4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": {{carBrandId}},\r\n  \"carModelId\": {{carmodelID}},\r\n  \"mileage\": {{initial_mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "1. Add car Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"1.Car successfully created\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });\r",
							"// pm.collectionVariables.set(\"carID1\", pm.response.json().data.id);\r",
							"// console.log(\"carID1 = \" + pm.response.json().data.id);\r",
							"// pm.test(\"carBrandId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carBrandId).to.eql(pm.collectionVariables.get(\"carBrandId\"));\r",
							"// });\r",
							"// pm.test(\"carModeId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carModelId).to.eql(pm.collectionVariables.get(\"carmodelID\"));\r",
							"// });\r",
							"// pm.test(\"initialMileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.initialMileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });\r",
							"// pm.test(\"mileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.mileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"initial_mileage\", 100);\r",
							"// pm.collectionVariables.set(\"carBrandId\", 1);\r",
							"// pm.collectionVariables.set(\"carModelId\", 4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": {{carBrandId}},\r\n  \"carModelId\": {{carmodelID}},\r\n  \"mileage\": {{initial_mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "1. Add car Copy 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"1.Car successfully created\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });\r",
							"// pm.collectionVariables.set(\"carID1\", pm.response.json().data.id);\r",
							"// console.log(\"carID1 = \" + pm.response.json().data.id);\r",
							"// pm.test(\"carBrandId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carBrandId).to.eql(pm.collectionVariables.get(\"carBrandId\"));\r",
							"// });\r",
							"// pm.test(\"carModeId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carModelId).to.eql(pm.collectionVariables.get(\"carmodelID\"));\r",
							"// });\r",
							"// pm.test(\"initialMileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.initialMileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });\r",
							"// pm.test(\"mileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.mileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"initial_mileage\", 100);\r",
							"// pm.collectionVariables.set(\"carBrandId\", 1);\r",
							"// pm.collectionVariables.set(\"carModelId\", 4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": {{carBrandId}},\r\n  \"carModelId\": {{carmodelID}},\r\n  \"mileage\": {{initial_mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "1. Add car Copy 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"1.Car successfully created\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });\r",
							"// pm.collectionVariables.set(\"carID1\", pm.response.json().data.id);\r",
							"// console.log(\"carID1 = \" + pm.response.json().data.id);\r",
							"// pm.test(\"carBrandId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carBrandId).to.eql(pm.collectionVariables.get(\"carBrandId\"));\r",
							"// });\r",
							"// pm.test(\"carModeId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carModelId).to.eql(pm.collectionVariables.get(\"carmodelID\"));\r",
							"// });\r",
							"// pm.test(\"initialMileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.initialMileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });\r",
							"// pm.test(\"mileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.mileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"initial_mileage\", 100);\r",
							"// pm.collectionVariables.set(\"carBrandId\", 1);\r",
							"// pm.collectionVariables.set(\"carModelId\", 4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": {{carBrandId}},\r\n  \"carModelId\": {{carmodelID}},\r\n  \"mileage\": {{initial_mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "1. Add car Copy 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"1.Car successfully created\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });\r",
							"// pm.collectionVariables.set(\"carID1\", pm.response.json().data.id);\r",
							"// console.log(\"carID1 = \" + pm.response.json().data.id);\r",
							"// pm.test(\"carBrandId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carBrandId).to.eql(pm.collectionVariables.get(\"carBrandId\"));\r",
							"// });\r",
							"// pm.test(\"carModeId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carModelId).to.eql(pm.collectionVariables.get(\"carmodelID\"));\r",
							"// });\r",
							"// pm.test(\"initialMileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.initialMileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });\r",
							"// pm.test(\"mileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.mileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"initial_mileage\", 100);\r",
							"// pm.collectionVariables.set(\"carBrandId\", 1);\r",
							"// pm.collectionVariables.set(\"carModelId\", 4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": {{carBrandId}},\r\n  \"carModelId\": {{carmodelID}},\r\n  \"mileage\": {{initial_mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "1. Add car Copy 6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"1.Car successfully created\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });\r",
							"// pm.collectionVariables.set(\"carID1\", pm.response.json().data.id);\r",
							"// console.log(\"carID1 = \" + pm.response.json().data.id);\r",
							"// pm.test(\"carBrandId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carBrandId).to.eql(pm.collectionVariables.get(\"carBrandId\"));\r",
							"// });\r",
							"// pm.test(\"carModeId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carModelId).to.eql(pm.collectionVariables.get(\"carmodelID\"));\r",
							"// });\r",
							"// pm.test(\"initialMileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.initialMileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });\r",
							"// pm.test(\"mileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.mileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"initial_mileage\", 100);\r",
							"// pm.collectionVariables.set(\"carBrandId\", 1);\r",
							"// pm.collectionVariables.set(\"carModelId\", 4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": {{carBrandId}},\r\n  \"carModelId\": {{carmodelID}},\r\n  \"mileage\": {{initial_mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "1. Add car Copy 7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"1.Car successfully created\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });\r",
							"// pm.collectionVariables.set(\"carID1\", pm.response.json().data.id);\r",
							"// console.log(\"carID1 = \" + pm.response.json().data.id);\r",
							"// pm.test(\"carBrandId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carBrandId).to.eql(pm.collectionVariables.get(\"carBrandId\"));\r",
							"// });\r",
							"// pm.test(\"carModeId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carModelId).to.eql(pm.collectionVariables.get(\"carmodelID\"));\r",
							"// });\r",
							"// pm.test(\"initialMileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.initialMileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });\r",
							"// pm.test(\"mileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.mileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"initial_mileage\", 100);\r",
							"// pm.collectionVariables.set(\"carBrandId\", 1);\r",
							"// pm.collectionVariables.set(\"carModelId\", 4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": {{carBrandId}},\r\n  \"carModelId\": {{carmodelID}},\r\n  \"mileage\": {{initial_mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "1. Add car Copy 8",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"1.Car successfully created\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });\r",
							"// pm.collectionVariables.set(\"carID1\", pm.response.json().data.id);\r",
							"// console.log(\"carID1 = \" + pm.response.json().data.id);\r",
							"// pm.test(\"carBrandId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carBrandId).to.eql(pm.collectionVariables.get(\"carBrandId\"));\r",
							"// });\r",
							"// pm.test(\"carModeId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carModelId).to.eql(pm.collectionVariables.get(\"carmodelID\"));\r",
							"// });\r",
							"// pm.test(\"initialMileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.initialMileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });\r",
							"// pm.test(\"mileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.mileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"initial_mileage\", 100);\r",
							"// pm.collectionVariables.set(\"carBrandId\", 1);\r",
							"// pm.collectionVariables.set(\"carModelId\", 4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": {{carBrandId}},\r\n  \"carModelId\": {{carmodelID}},\r\n  \"mileage\": {{initial_mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "1. Add car Copy 9",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"1.Car successfully created\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });\r",
							"// pm.collectionVariables.set(\"carID1\", pm.response.json().data.id);\r",
							"// console.log(\"carID1 = \" + pm.response.json().data.id);\r",
							"// pm.test(\"carBrandId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carBrandId).to.eql(pm.collectionVariables.get(\"carBrandId\"));\r",
							"// });\r",
							"// pm.test(\"carModeId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carModelId).to.eql(pm.collectionVariables.get(\"carmodelID\"));\r",
							"// });\r",
							"// pm.test(\"initialMileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.initialMileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });\r",
							"// pm.test(\"mileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.mileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"initial_mileage\", 100);\r",
							"// pm.collectionVariables.set(\"carBrandId\", 1);\r",
							"// pm.collectionVariables.set(\"carModelId\", 4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": {{carBrandId}},\r\n  \"carModelId\": {{carmodelID}},\r\n  \"mileage\": {{initial_mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "1. Add car Copy 10",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"1.Car successfully created\", function () {\r",
							"//     pm.response.to.have.status(201);\r",
							"// });\r",
							"// pm.collectionVariables.set(\"carID1\", pm.response.json().data.id);\r",
							"// console.log(\"carID1 = \" + pm.response.json().data.id);\r",
							"// pm.test(\"carBrandId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carBrandId).to.eql(pm.collectionVariables.get(\"carBrandId\"));\r",
							"// });\r",
							"// pm.test(\"carModeId correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.carModelId).to.eql(pm.collectionVariables.get(\"carmodelID\"));\r",
							"// });\r",
							"// pm.test(\"initialMileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.initialMileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });\r",
							"// pm.test(\"mileage correspond\", function () {\r",
							"// pm.expect(pm.response.json().data.mileage).to.eql(pm.collectionVariables.get(\"initial_mileage\"));\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"initial_mileage\", 100);\r",
							"// pm.collectionVariables.set(\"carBrandId\", 1);\r",
							"// pm.collectionVariables.set(\"carModelId\", 4);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": {{carBrandId}},\r\n  \"carModelId\": {{carmodelID}},\r\n  \"mileage\": {{initial_mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Cars",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"CarID1 verified\", function () {\r",
							"//     pm.expect(pm.response.json().data[0].id).to.eql(pm.collectionVariables.get(\"carID1\"));\r",
							"// });\r",
							"\r",
							"const Data = pm.response.json().data;\r",
							"// создается первый \r",
							"let myArrayModel2 = []\r",
							"_.each(pm.response.json().data, (item) => {\r",
							"    myArrayModel2.push(item.model)\r",
							"});\r",
							"pm.collectionVariables.set(\"modelArray2\", JSON.stringify(myArrayModel2));\r",
							"console.log(myArrayModel2)\r",
							"\r",
							"// и второй\r",
							"let myArrayMileage2 = []\r",
							"_.each(pm.response.json().data, (item) => {\r",
							"    myArrayMileage2.push(item.mileage)\r",
							"});\r",
							"pm.collectionVariables.set(\"mileageArray2\", JSON.stringify(myArrayMileage2));\r",
							"console.log(myArrayMileage2)\r",
							"\r",
							"let myArrayModel1 = JSON.parse(pm.collectionVariables.get(\"modelArray1\"));\r",
							"let myArrayMileage1 = JSON.parse(pm.collectionVariables.get(\"mileageArray1\"));\r",
							"\r",
							"let Data1 = pm.collectionVariables.get(\"User1Data\");\r",
							"let parsedData1 = JSON.parse(Data1);\r",
							"console.log(Data1)\r",
							"\r",
							"\r",
							"pm.test(\"Verify myArrayModel2 > lenght\", function () {\r",
							"    for (let i of Data) {\r",
							"        for (let s of myArrayModel2)\r",
							"            pm.expect(i.model).to.be.eql(s);\r",
							"            console.log(i.model);\r",
							"            // 2\r",
							"        for (let j of myArrayMileage2)\r",
							"            pm.expect(i.mileage).to.be.eql(j);\r",
							"            console.log(i.mileage);\r",
							"    }\r",
							"    for (let i of parsedData1) {\r",
							"        for (let s of myArrayModel1)\r",
							"            pm.expect(i.model).to.be.eql(s);\r",
							"            console.log(i.model);\r",
							"            // 2\r",
							"        for (let l of myArrayMileage1)\r",
							"            pm.expect(i.mileage).to.be.eql(l);\r",
							"            console.log(i.mileage);\r",
							"    }\r",
							"});\r",
							"\r",
							"// pm.test(\"Verify myArrayMileage2 > 0\", function () {\r",
							"//     for (let i of Data) {\r",
							"//         for (let j of myArrayMileage2)\r",
							"//             pm.expect(i.mileage).to.be.eql(j);\r",
							"//             console.log(i.mileage);\r",
							"//     }\r",
							"// });\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"// 1\r",
							"// var array = JSON.parse(responseBody).data;\r",
							"// var models2 = [];\r",
							"// for(var i=0; i< array.length; i++)\r",
							"// {\r",
							"//     models2.push(array[i].carModelId);\r",
							"// }\r",
							"// pm.collectionVariables.set(\"modelArray2\",JSON.stringify(models2));\r",
							"\r",
							"// // 2\r",
							"// var array = JSON.parse(responseBody).data;\r",
							"// var mileage2 = [];\r",
							"// for(var i=0; i< array.length; i++)\r",
							"// {\r",
							"//     mileage2.push(array[i].mileage);\r",
							"// }\r",
							"// pm.collectionVariables.set(\"mileageArray2\",JSON.stringify(mileage2));\r",
							"\r",
							"// // test 1\r",
							"// pm.environment.set(\"variable_key\", \"variable_value\");\r",
							"// pm.collectionVariables.set(\"variable_key\", \"variable_value\");\r",
							"\r",
							"// pm.collectionVariables.set(\"myArrayModel2\", modelArray2);\r",
							"// console.log(myArrayModel2)\r",
							"// pm.collectionVariables.set(\"myArrayMileage1\", mileageArray2);\r",
							"// console.log(myArrayMileage1)\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"// pm.test(\"Verify CarID1 Milleage > 0\", function () {\r",
							"//     for (let i in Data) {\r",
							"//         pm.expect(pm.response.json().data[i].mileage).to.be.above(0);\r",
							"//     }\r",
							"// });\r",
							"\r",
							"\r",
							"\r",
							"// let six = 6\r",
							"// let modelArray2example = pm.collectionVariables.get(\"modelArray2\");\r",
							"// let mileageArray2example = pm.collectionVariables.get(\"mileageArray2\");\r",
							"// var array1 = [{\r",
							"// modelArray2\r",
							"//   }]\r",
							"// var array2 = [{ six }]\r",
							"// let result = array2.some(o => array1.findIndex(ao => Object.entries(o).every(([key, value]) => ao[key] === value)) === -1);\r",
							"// console.log(result);\r",
							"\r",
							"\r",
							"// pm.test(\"Verify CarID1 carModelId > 0\", function () {\r",
							"//     for (let i in Data) {\r",
							"//         pm.expect(pm.response.json().data[i].carModelId).to.be.above(0);\r",
							"//     }\r",
							"// });\r",
							"\r",
							"\r",
							"// pm.test(\"Verify CarID2 Milleage > 0\", function () {\r",
							"//     for (let i of Data) {\r",
							"//         pm.expect(i.mileage).to.be.eql(100);\r",
							"//     }\r",
							"// });\r",
							"\r",
							"\r",
							"// pm.test(\"Verify CarID3 Milleage > 0\", function () {\r",
							"//     pm.expect(pm.response.json().data[0].id).to.eql(pm.collectionVariables.get(\"CarID3\"));\r",
							"// });\r",
							"\r",
							"// pm.test(\"Successfully received the data\", function () {\r",
							"//     pm.response.to.have.status(200);\r",
							"// });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"User deleted\", function () {\r",
							"//     pm.response.to.have.status(200);\r",
							"// });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cars models Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"Successfully received the data\", function () {\r",
							"//     pm.response.to.have.status(200);\r",
							"// });\r",
							"// // pm.collectionVariables.set(\"carmodelID\", pm.response.json().data[5].id);\r",
							"// // console.log(\"carmodelID = \" + pm.collectionVariables.get(\"carmodelID\"));\r",
							"// var targetTitle = \"Cayenne\";\r",
							"// var responseArray = pm.response.json().data;\r",
							"// let i = 0;\r",
							"// for (let i = 0; i < responseArray.length; i++ ) {\r",
							"//     if ((responseArray[i].title === targetTitle) && (responseArray[i].carBrandId === pm.collectionVariables.get(\"carBrandId\"))) {\r",
							"//         pm.collectionVariables.set(\"carmodelID\", responseArray[i].id);\r",
							"//         break;\r",
							"//     }\r",
							"// }\r",
							"// console.log(\"carmodelID \" + pm.collectionVariables.get(\"carmodelID\"))\r",
							"// console.log(responseArray[i].carBrandId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/cars/models",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars",
						"models"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": ""
		},
		{
			"key": "carBrandId",
			"value": ""
		},
		{
			"key": "carmodelID",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "currency",
			"value": ""
		},
		{
			"key": "initial_mileage",
			"value": ""
		},
		{
			"key": "carID",
			"value": ""
		},
		{
			"key": "carID1",
			"value": ""
		},
		{
			"key": "carID2",
			"value": ""
		},
		{
			"key": "carID3",
			"value": ""
		},
		{
			"key": "email2",
			"value": ""
		},
		{
			"key": "modelArray1",
			"value": ""
		},
		{
			"key": "mileageArray",
			"value": ""
		},
		{
			"key": "modelArray2",
			"value": ""
		},
		{
			"key": "mileageArray2",
			"value": ""
		},
		{
			"key": "User1Data",
			"value": ""
		},
		{
			"key": "mileageArray1",
			"value": ""
		}
	]
}